<!DOCTYPE html>
<html lang="zh-CN">
<head>
  <meta charset="UTF-8">
  <meta name="viewport" content="width=device-width, initial-scale=1.0">
  <title>管理后台 - 运维导航系统</title>
  <script src="https://cdn.tailwindcss.com"></script>
  <script>
    tailwind.config = {
      theme: {
        extend: {
          colors: {
            primary: '#0EA5E9',
            secondary: '#F8FAFC',
            accent: '#10B981',
            light: '#F1F5F9',
            lighter: '#FFFFFF',
            tech: '#0EA5E9',
            success: '#10B981',
            warning: '#F59E0B',
            danger: '#EF4444',
          },
          backgroundImage: {
            'tech-gradient': 'linear-gradient(135deg, #F8FAFC 0%, #F1F5F9 50%, #E2E8F0 100%)',
            'card-gradient': 'linear-gradient(135deg, #FFFFFF 0%, #F8FAFC 100%)',
            'sidebar-gradient': 'linear-gradient(180deg, #FFFFFF 0%, #F8FAFC 100%)',
          }
        }
      }
    }
  </script>
  <style>
    .tech-glow {
      box-shadow: 0 0 20px rgba(14, 165, 233, 0.2);
    }
    .tech-border {
      border: 1px solid rgba(14, 165, 233, 0.2);
    }
    .nav-item {
      transition: all 0.3s ease;
    }
    .nav-item:hover {
      background: linear-gradient(90deg, rgba(14, 165, 233, 0.05) 0%, rgba(16, 185, 129, 0.05) 100%);
      border-left: 3px solid #0EA5E9;
      transform: translateX(4px);
    }
    .nav-item.active {
      background: linear-gradient(90deg, rgba(14, 165, 233, 0.1) 0%, rgba(16, 185, 129, 0.1) 100%);
      border-left: 3px solid #10B981;
    }
  </style>
</head>
<body class="bg-tech-gradient min-h-screen text-gray-800">
  <div class="flex">
    <!-- Sidebar -->
    <% if session[:admin_logged_in] %>
      <div class="w-64 bg-white shadow-lg min-h-screen border-r border-gray-200">
        <div class="p-6 border-b border-gray-200">
          <div class="flex items-center space-x-3">
            <div class="w-10 h-10 bg-gradient-to-br from-tech to-accent rounded-lg flex items-center justify-center tech-glow">
              <svg class="w-5 h-5 text-white" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M10.325 4.317c.426-1.756 2.924-1.756 3.35 0a1.724 1.724 0 002.573 1.066c1.543-.94 3.31.826 2.37 2.37a1.724 1.724 0 001.065 2.572c1.756.426 1.756 2.924 0 3.35a1.724 1.724 0 00-1.066 2.573c.94 1.543-.826 3.31-2.37 2.37a1.724 1.724 0 00-2.572 1.065c-.426 1.756-2.924 1.756-3.35 0a1.724 1.724 0 00-2.573-1.066c-1.543.94-3.31-.826-2.37-2.37a1.724 1.724 0 00-1.065-2.572c-1.756-.426-1.756-2.924 0-3.35a1.724 1.724 0 001.066-2.573c-.94-1.543.826-3.31 2.37-2.37.996.608 2.296.07 2.572-1.065z"/>
                <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M15 12a3 3 0 11-6 0 3 3 0 016 0z"/>
              </svg>
            </div>
            <div>
              <h1 class="text-lg font-bold bg-gradient-to-r from-tech to-accent bg-clip-text text-transparent">
                管理后台
              </h1>
              <p class="text-xs text-gray-500">欢迎, <%= session[:admin_username] %></p>
            </div>
          </div>
        </div>

        <nav class="mt-6">
          <div class="px-6 py-2">
            <h2 class="text-xs font-semibold text-gray-500 uppercase tracking-wide">系统导航</h2>
          </div>
          <a href="/admin/dashboard" class="nav-item flex items-center px-6 py-3 text-gray-600 hover:text-tech transition-colors">
            <svg class="w-5 h-5 mr-3" fill="none" stroke="currentColor" viewBox="0 0 24 24">
              <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M9 19v-6a2 2 0 00-2-2H5a2 2 0 00-2 2v6a2 2 0 002 2h2a2 2 0 002-2zm0 0V9a2 2 0 012-2h2a2 2 0 012 2v10m-6 0a2 2 0 002 2h2a2 2 0 002-2m0 0V5a2 2 0 012-2h2a2 2 0 012 2v14a2 2 0 01-2 2h-2a2 2 0 01-2-2z"/>
            </svg>
            <span>仪表板</span>
          </a>
          <a href="/admin/categories" class="nav-item flex items-center px-6 py-3 text-gray-600 hover:text-tech transition-colors">
            <svg class="w-5 h-5 mr-3" fill="none" stroke="currentColor" viewBox="0 0 24 24">
              <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M7 7h.01M7 3h5c.512 0 1.024.195 1.414.586l7 7a2 2 0 010 2.828l-7 7a2 2 0 01-2.828 0l-7-7A1.994 1.994 0 013 12V7a4 4 0 014-4z"/>
            </svg>
            <span>分类管理</span>
          </a>
          <a href="/admin/links" class="nav-item flex items-center px-6 py-3 text-gray-600 hover:text-tech transition-colors">
            <svg class="w-5 h-5 mr-3" fill="none" stroke="currentColor" viewBox="0 0 24 24">
              <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M13.828 10.172a4 4 0 00-5.656 0l-4 4a4 4 0 105.656 5.656l1.102-1.101m-.758-4.899a4 4 0 005.656 0l4-4a4 4 0 00-5.656-5.656l-1.1 1.1"/>
            </svg>
            <span>链接管理</span>
          </a>

          <div class="mt-6 pt-6 border-t border-gray-200">
            <div class="px-6 py-2">
              <h2 class="text-xs font-semibold text-gray-500 uppercase tracking-wide">系统操作</h2>
            </div>
            <a href="/" target="_blank" class="nav-item flex items-center px-6 py-3 text-gray-600 hover:text-accent transition-colors">
              <svg class="w-5 h-5 mr-3" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M10 6H6a2 2 0 00-2 2v10a2 2 0 002 2h10a2 2 0 002-2v-4M14 4h6m0 0v6m0-6L10 14"/>
              </svg>
              <span>查看前台</span>
            </a>
            <a href="/admin/change-password" class="nav-item flex items-center px-6 py-3 text-gray-600 hover:text-tech transition-colors">
              <svg class="w-5 h-5 mr-3" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M15 7a2 2 0 012 2m0 0a2 2 0 012 2v6a2 2 0 01-2 2H9a2 2 0 01-2-2V9a2 2 0 012-2m0 0V7a2 2 0 012-2m3 0a2 2 0 00-2-2M9 5a2 2 0 002 2h2a2 2 0 002-2M9 5a2 2 0 012-2h2a2 2 0 012 2"/>
              </svg>
              <span>修改密码</span>
            </a>
            <a href="/admin/logout" class="nav-item flex items-center px-6 py-3 text-red-600 hover:text-red-700 transition-colors">
              <svg class="w-5 h-5 mr-3" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M17 16l4-4m0 0l-4-4m4 4H7m6 4v1a3 3 0 01-3 3H6a3 3 0 01-3-3V7a3 3 0 013-3h4a3 3 0 013 3v1"/>
              </svg>
              <span>退出登录</span>
            </a>
          </div>
        </nav>
      </div>
    <% end %>

    <!-- Main content -->
    <div class="<%= session[:admin_logged_in] ? 'flex-1' : 'w-full' %>">
      <% if session[:admin_logged_in] %>
        <header class="bg-white shadow-sm border-b border-gray-200">
          <div class="px-6 py-4">
            <div class="flex items-center justify-between">
              <h2 class="text-lg font-semibold text-gray-800">运维管理控制台</h2>
              <div class="flex items-center space-x-4">
                <div class="flex items-center space-x-2 text-sm text-gray-500">
                  <div class="w-2 h-2 bg-success rounded-full animate-pulse"></div>
                  <span>系统正常运行</span>
                </div>
                <div class="text-sm text-gray-500">
                  <%= Time.now.strftime('%Y-%m-%d %H:%M') %>
                </div>
              </div>
            </div>
          </div>
        </header>
      <% end %>

      <main class="p-6">
        <%= yield %>
      </main>
    </div>
  </div>

  <script>
    // Custom notification system
    function showNotification(message, type = 'success') {
      const notification = document.createElement('div');
      notification.className = `fixed top-4 right-4 z-50 p-4 rounded-lg shadow-lg transform transition-all duration-300 ease-in-out translate-x-full`;

      if (type === 'success') {
        notification.className += ' bg-green-500 text-white';
        notification.innerHTML = `
          <div class="flex items-center">
            <svg class="w-5 h-5 mr-2" fill="none" stroke="currentColor" viewBox="0 0 24 24">
              <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M5 13l4 4L19 7"/>
            </svg>
            ${message}
          </div>
        `;
      } else if (type === 'error') {
        notification.className += ' bg-red-500 text-white';
        notification.innerHTML = `
          <div class="flex items-center">
            <svg class="w-5 h-5 mr-2" fill="none" stroke="currentColor" viewBox="0 0 24 24">
              <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M6 18L18 6M6 6l12 12"/>
            </svg>
            ${message}
          </div>
        `;
      } else if (type === 'warning') {
        notification.className += ' bg-yellow-500 text-white';
        notification.innerHTML = `
          <div class="flex items-center">
            <svg class="w-5 h-5 mr-2" fill="none" stroke="currentColor" viewBox="0 0 24 24">
              <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M12 9v2m0 4h.01m-6.938 4h13.856c1.54 0 2.502-1.667 1.732-2.5L13.732 4c-.77-.833-1.964-.833-2.732 0L3.732 16.5c-.77.833.192 2.5 1.732 2.5z"/>
            </svg>
            ${message}
          </div>
        `;
      }

      document.body.appendChild(notification);

      // Animate in
      setTimeout(() => {
        notification.classList.remove('translate-x-full');
      }, 100);

      // Auto remove after 3 seconds
      setTimeout(() => {
        notification.classList.add('translate-x-full');
        setTimeout(() => {
          if (notification.parentNode) {
            notification.parentNode.removeChild(notification);
          }
        }, 300);
      }, 3000);
    }

    // Custom confirmation modal
    function showConfirmModal(title, message, onConfirm, onCancel = null) {
      const modal = document.createElement('div');
      modal.className = 'fixed inset-0 z-50 flex items-center justify-center bg-black bg-opacity-50';
      modal.innerHTML = `
        <div class="bg-white rounded-xl shadow-2xl max-w-md w-full mx-4 transform transition-all duration-300 scale-95">
          <div class="p-6">
            <div class="flex items-center mb-4">
              <div class="w-12 h-12 bg-red-100 rounded-full flex items-center justify-center mr-4">
                <svg class="w-6 h-6 text-red-600" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                  <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M12 9v2m0 4h.01m-6.938 4h13.856c1.54 0 2.502-1.667 1.732-2.5L13.732 4c-.77-.833-1.964-.833-2.732 0L3.732 16.5c-.77.833.192 2.5 1.732 2.5z"/>
                </svg>
              </div>
              <div>
                <h3 class="text-lg font-semibold text-gray-900">${title}</h3>
              </div>
            </div>
            <p class="text-gray-600 mb-6">${message}</p>
            <div class="flex space-x-3 justify-end">
              <button id="cancelBtn" class="px-4 py-2 bg-gray-200 text-gray-800 rounded-lg hover:bg-gray-300 transition-colors duration-200">
                取消
              </button>
              <button id="confirmBtn" class="px-4 py-2 bg-red-600 text-white rounded-lg hover:bg-red-700 transition-colors duration-200">
                确认删除
              </button>
            </div>
          </div>
        </div>
      `;

      document.body.appendChild(modal);

      // Animate in
      setTimeout(() => {
        modal.querySelector('div > div').classList.remove('scale-95');
        modal.querySelector('div > div').classList.add('scale-100');
      }, 100);

      // Event listeners
      const confirmBtn = modal.querySelector('#confirmBtn');
      const cancelBtn = modal.querySelector('#cancelBtn');

      confirmBtn.addEventListener('click', () => {
        document.body.removeChild(modal);
        if (onConfirm) onConfirm();
      });

      cancelBtn.addEventListener('click', () => {
        document.body.removeChild(modal);
        if (onCancel) onCancel();
      });

      // Close on backdrop click
      modal.addEventListener('click', (e) => {
        if (e.target === modal) {
          document.body.removeChild(modal);
          if (onCancel) onCancel();
        }
      });
    }

    // Delete confirmation with beautiful modal
    function confirmDelete(id, type, name) {
      const typeText = type === 'category' ? '分类' : '链接';
      showConfirmModal(
        `删除${typeText}`,
        `确定要删除${typeText} "${name}" 吗？此操作不可恢复。`,
        () => {
          // Show loading notification
          showNotification('正在删除...', 'warning');

          // Fix the URL construction for correct plural forms
          let url;
          if (type === 'category') {
            url = `/admin/categories/${id}`;
          } else if (type === 'link') {
            url = `/admin/links/${id}`;
          } else {
            url = `/admin/${type}s/${id}`;
          }

          fetch(url, {
            method: 'DELETE',
            headers: {
              'Content-Type': 'application/json',
            },
            credentials: 'same-origin'
          })
          .then(response => response.json())
          .then(data => {
            if (data.success) {
              showNotification(`${typeText}删除成功！`, 'success');
              setTimeout(() => {
                location.reload();
              }, 1000);
            } else {
              showNotification('删除失败，请重试', 'error');
            }
          })
          .catch(error => {
            console.error('Error:', error);
            showNotification('删除失败，请重试', 'error');
          });
        }
      );
    }

    // Toggle link status with beautiful notifications
    function toggleLink(id) {
      showNotification('正在更新状态...', 'warning');

      fetch(`/admin/links/${id}/toggle`, {
        method: 'PUT',
        headers: {
          'Content-Type': 'application/json',
        },
        credentials: 'same-origin'
      })
      .then(response => response.json())
      .then(data => {
        if (data.success) {
          const statusText = data.is_active ? '启用' : '禁用';
          showNotification(`链接${statusText}成功！`, 'success');
          setTimeout(() => {
            location.reload();
          }, 1000);
        } else {
          showNotification('操作失败，请重试', 'error');
        }
      })
      .catch(error => {
        console.error('Error:', error);
        showNotification('操作失败，请重试', 'error');
      });
    }

    // Emoji picker functions
    function showEmojiPicker() {
      const picker = document.getElementById('emojiPicker');
      if (picker) {
        picker.classList.remove('hidden');
      }
    }

    function hideEmojiPicker() {
      const picker = document.getElementById('emojiPicker');
      if (picker) {
        picker.classList.add('hidden');
      }
    }

    function selectEmoji(emoji) {
      const iconInput = document.getElementById('icon');
      if (iconInput) {
        iconInput.value = emoji;
        hideEmojiPicker();
      }
    }

    // Close emoji picker when clicking outside
    document.addEventListener('click', function(event) {
      const picker = document.getElementById('emojiPicker');
      const button = event.target.closest('button[onclick="showEmojiPicker()"]');
      const emojiBtn = event.target.closest('.emoji-btn');
      const closeBtn = event.target.closest('button[onclick="hideEmojiPicker()"]');

      if (picker && !picker.contains(event.target) && !button && !emojiBtn && !closeBtn) {
        hideEmojiPicker();
      }
    });

    // Highlight current page in navigation
    document.addEventListener('DOMContentLoaded', function() {
      const currentPath = window.location.pathname;
      const navLinks = document.querySelectorAll('.nav-item');

      navLinks.forEach(link => {
        if (link.getAttribute('href') === currentPath) {
          link.classList.add('active');
        }
      });
    });
  </script>
</body>
</html>